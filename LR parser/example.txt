example 1: 
input:
{  
ID = NUM ;  
}


expect:
program => 
compoundstmt => 
{ stmts } => 
{ stmt stmts } => 
{ stmt } => 
{ assgstmt } => 
{ ID = arithexpr ; } => 
{ ID = multexpr arithexprprime ; } => 
{ ID = multexpr ; } => 
{ ID = simpleexpr multexprprime ; } => 
{ ID = simpleexpr ; } => 
{ ID = NUM ; } 



example 3:
input:
{

while ( ID == NUM ) 

{ 

ID = NUM 

}

}

expect:

语法错误，第4行，缺少";"
program => 
compoundstmt => 
{ stmts } => 
{ stmt stmts } => 
{ stmt } => 
{ whilestmt } => 
{ while ( boolexpr ) stmt } => 
{ while ( boolexpr ) compoundstmt } => 
{ while ( boolexpr ) { stmts } } => 
{ while ( boolexpr ) { stmt stmts } } => 
{ while ( boolexpr ) { stmt } } => 
{ while ( boolexpr ) { assgstmt } } => 
{ while ( boolexpr ) { ID = arithexpr ; } } => 
{ while ( boolexpr ) { ID = multexpr arithexprprime ; } } => 
{ while ( boolexpr ) { ID = multexpr ; } } => 
{ while ( boolexpr ) { ID = simpleexpr multexprprime ; } } => 
{ while ( boolexpr ) { ID = simpleexpr ; } } => 
{ while ( boolexpr ) { ID = NUM ; } } => 
{ while ( arithexpr boolop arithexpr ) { ID = NUM ; } } => 
{ while ( arithexpr boolop multexpr arithexprprime ) { ID = NUM ; } } => 
{ while ( arithexpr boolop multexpr ) { ID = NUM ; } } => 
{ while ( arithexpr boolop simpleexpr multexprprime ) { ID = NUM ; } } => 
{ while ( arithexpr boolop simpleexpr ) { ID = NUM ; } } => 
{ while ( arithexpr boolop NUM ) { ID = NUM ; } } => 
{ while ( arithexpr == NUM ) { ID = NUM ; } } => 
{ while ( multexpr arithexprprime == NUM ) { ID = NUM ; } } => 
{ while ( multexpr == NUM ) { ID = NUM ; } } => 
{ while ( simpleexpr multexprprime == NUM ) { ID = NUM ; } } => 
{ while ( simpleexpr == NUM ) { ID = NUM ; } } => 
{ while ( ID == NUM ) { ID = NUM ; } } 
